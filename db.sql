



DROP TABLE IF EXISTS T_ROLES;
CREATE TABLE IF NOT EXISTS T_ROLES (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role_name VARCHAR(50) UNIQUE NOT NULL,
    description TEXT
);


DROP TABLE IF EXISTS T_USERS;
CREATE TABLE IF NOT EXISTS T_USERS (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    username VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role_id INTEGER NOT NULL,
    is_active BOOLEAN DEFAULT 1, 
    FOREIGN KEY (role_id) REFERENCES T_ROLES (id)
);


DROP TABLE IF EXISTS T_PERMISSIONS;
CREATE TABLE IF NOT EXISTS T_PERMISSIONS (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) UNIQUE NOT NULL
);


DROP TABLE IF EXISTS T_ROLE_PERMISSIONS;
CREATE TABLE IF NOT EXISTS T_ROLE_PERMISSIONS (
    role_id INTEGER NOT NULL,
    permission_id INTEGER NOT NULL,
    PRIMARY KEY (role_id, permission_id),
    FOREIGN KEY (role_id) REFERENCES T_ROLES (id),
    FOREIGN KEY (permission_id) REFERENCES T_PERMISSIONS (id)
);

DROP TABLE IF EXISTS T_SCRAPING_SCRIPTS;
CREATE TABLE IF NOT EXISTS T_SCRAPING_SCRIPTS (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    class_name VARCHAR(255) UNIQUE NOT NULL
);

DROP TABLE IF EXISTS T_COMICS;
CREATE TABLE IF NOT EXISTS T_COMICS (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    title VARCHAR(255) UNIQUE NOT NULL,
    status VARCHAR(50) DEFAULT 'unknown'
);

DROP TABLE IF EXISTS T_SCRAPING_INSTANCE;
CREATE TABLE IF NOT EXISTS T_SCRAPING_INSTANCE (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT 0, 
    scraping_url VARCHAR(500) NOT NULL,
    scraping_interval INTEGER DEFAULT 86400,
    comic_id INTEGER NOT NULL,
    scraping_script_id INTEGER NOT NULL,
    FOREIGN KEY (comic_id) REFERENCES T_COMICS (id),
    FOREIGN KEY (scraping_script_id) REFERENCES T_SCRAPING_SCRIPTS (id)
);

DROP TABLE IF EXISTS T_SCRAPING_HISTORY;
CREATE TABLE IF NOT EXISTS T_SCRAPING_HISTORY (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    scraping_instance_id INTEGER NOT NULL,
    chapter_number DECIMAL(10, 2) NOT NULL,
    chapter_title VARCHAR(255),
    scraped_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (scraping_instance_id) REFERENCES T_SCRAPING_INSTANCE (id)
);

DROP TABLE IF EXISTS T_USER_SUBSCRIPTION;
CREATE TABLE IF NOT EXISTS T_USER_SUBSCRIPTION (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    comic_id INTEGER NOT NULL,
    subscribed_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES T_USERS (id),
    FOREIGN KEY (comic_id) REFERENCES T_COMICS (id)
);



INSERT INTO T_COMICS (title) VALUES 
    ("test_comic_1"),
    ("test_comic_2");

INSERT INTO T_SCRAPING_SCRIPTS(class_name) VALUES
    ('BasicScrapper'),
    ('TestScrapper');

INSERT INTO T_SCRAPING_INSTANCE(is_active, scraping_url, comic_id, scraping_script_id) VALUES
    (1, '', 1, 1);