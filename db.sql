
DROP TABLE IF EXISTS T_ROLE_PERMISSION;
DROP TABLE IF EXISTS T_PERMISSION;
DROP TABLE IF EXISTS T_ROLE;
DROP TABLE IF EXISTS T_USER_SUBSCRIPTION;
DROP TABLE IF EXISTS T_SCRAPING_HISTORY;
DROP TABLE IF EXISTS T_SCRAPING_INSTANCE;
DROP TABLE IF EXISTS T_USER;
DROP TABLE IF EXISTS T_SCRAPING_SCRIPT;
DROP TABLE IF EXISTS T_COMIC;

CREATE TABLE IF NOT EXISTS T_ROLE (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role_name VARCHAR(50) UNIQUE NOT NULL,
    description TEXT
);

CREATE TABLE IF NOT EXISTS T_USER (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    username VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role_id INTEGER NOT NULL,
    is_active BOOLEAN DEFAULT 1, 
    FOREIGN KEY (role_id) REFERENCES T_ROLE (id)
);

CREATE TABLE IF NOT EXISTS T_PERMISSION (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS T_ROLE_PERMISSION (
    role_id INTEGER NOT NULL,
    permission_id INTEGER NOT NULL,
    PRIMARY KEY (role_id, permission_id),
    FOREIGN KEY (role_id) REFERENCES T_ROLE (id),
    FOREIGN KEY (permission_id) REFERENCES T_PERMISSION (id)
);

CREATE TABLE IF NOT EXISTS T_SCRAPING_SCRIPT (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    class_name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS T_COMIC (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    title VARCHAR(255) UNIQUE NOT NULL,
    status VARCHAR(50) DEFAULT 'unknown'
);

CREATE TABLE IF NOT EXISTS T_SCRAPING_INSTANCE (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT 0, 
    scraping_url VARCHAR(500) NOT NULL,
    scraping_interval INTEGER DEFAULT 86400 NOT NULL,
    last_scrap_at DATETIME DEFAULT NULL,
    comic_id INTEGER NOT NULL,
    scraping_script_id INTEGER NOT NULL,
    FOREIGN KEY (comic_id) REFERENCES T_COMIC (id),
    FOREIGN KEY (scraping_script_id) REFERENCES T_SCRAPING_SCRIPT (id)
);

CREATE TABLE IF NOT EXISTS T_SCRAPING_HISTORY (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    scraping_instance_id INTEGER NOT NULL,
    chapter_number DECIMAL(10, 2) NOT NULL,
    chapter_title VARCHAR(255),
    scraped_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (scraping_instance_id) REFERENCES T_SCRAPING_INSTANCE (id)
);

CREATE TABLE IF NOT EXISTS T_USER_SUBSCRIPTION (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    comic_id INTEGER NOT NULL,
    subscribed_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES T_USER (id),
    FOREIGN KEY (comic_id) REFERENCES T_COMIC (id)
);


-- INSERT INTO T_COMIC (title) VALUES 
--     ("test_comic_1"),
--     ("test_comic_2");
INSERT INTO T_COMIC (title) VALUES 
    ("Player who returned 10000 years later"),
    ("Dungeon odyssey");

INSERT INTO T_SCRAPING_SCRIPT(class_name) VALUES
    ('BasicScrapper'),
    ('TestScrapper'),
    ('ManhuasScrapper');

INSERT INTO T_SCRAPING_INSTANCE(is_active, scraping_url, comic_id, scraping_script_id, scraping_interval) VALUES
    (1, 'https://manhuaus.com/manga/player-who-returned-10000-years-later/', 1, 3, 21600),
    (1, 'https://manhuaus.com/manga/dungeon-odyssey/', 2, 3, 21600);
